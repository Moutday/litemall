package org.linlinjava.litemall.db.domain;

import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class LitemallUserCardExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    public LitemallUserCardExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    public LitemallUserCardExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    public LitemallUserCardExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        LitemallUserCardExample example = new LitemallUserCardExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    public LitemallUserCardExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    public LitemallUserCardExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andCardLevelIsNull() {
            addCriterion("card_level is null");
            return (Criteria) this;
        }

        public Criteria andCardLevelIsNotNull() {
            addCriterion("card_level is not null");
            return (Criteria) this;
        }

        public Criteria andCardLevelEqualTo(Byte value) {
            addCriterion("card_level =", value, "cardLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andCardLevelEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("card_level = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCardLevelNotEqualTo(Byte value) {
            addCriterion("card_level <>", value, "cardLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andCardLevelNotEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("card_level <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCardLevelGreaterThan(Byte value) {
            addCriterion("card_level >", value, "cardLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andCardLevelGreaterThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("card_level > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCardLevelGreaterThanOrEqualTo(Byte value) {
            addCriterion("card_level >=", value, "cardLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andCardLevelGreaterThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("card_level >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCardLevelLessThan(Byte value) {
            addCriterion("card_level <", value, "cardLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andCardLevelLessThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("card_level < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCardLevelLessThanOrEqualTo(Byte value) {
            addCriterion("card_level <=", value, "cardLevel");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andCardLevelLessThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("card_level <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andCardLevelIn(List<Byte> values) {
            addCriterion("card_level in", values, "cardLevel");
            return (Criteria) this;
        }

        public Criteria andCardLevelNotIn(List<Byte> values) {
            addCriterion("card_level not in", values, "cardLevel");
            return (Criteria) this;
        }

        public Criteria andCardLevelBetween(Byte value1, Byte value2) {
            addCriterion("card_level between", value1, value2, "cardLevel");
            return (Criteria) this;
        }

        public Criteria andCardLevelNotBetween(Byte value1, Byte value2) {
            addCriterion("card_level not between", value1, value2, "cardLevel");
            return (Criteria) this;
        }

        public Criteria andPointBeginIsNull() {
            addCriterion("point_begin is null");
            return (Criteria) this;
        }

        public Criteria andPointBeginIsNotNull() {
            addCriterion("point_begin is not null");
            return (Criteria) this;
        }

        public Criteria andPointBeginEqualTo(Integer value) {
            addCriterion("point_begin =", value, "pointBegin");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andPointBeginEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("point_begin = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointBeginNotEqualTo(Integer value) {
            addCriterion("point_begin <>", value, "pointBegin");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andPointBeginNotEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("point_begin <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointBeginGreaterThan(Integer value) {
            addCriterion("point_begin >", value, "pointBegin");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andPointBeginGreaterThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("point_begin > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointBeginGreaterThanOrEqualTo(Integer value) {
            addCriterion("point_begin >=", value, "pointBegin");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andPointBeginGreaterThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("point_begin >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointBeginLessThan(Integer value) {
            addCriterion("point_begin <", value, "pointBegin");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andPointBeginLessThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("point_begin < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointBeginLessThanOrEqualTo(Integer value) {
            addCriterion("point_begin <=", value, "pointBegin");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andPointBeginLessThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("point_begin <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointBeginIn(List<Integer> values) {
            addCriterion("point_begin in", values, "pointBegin");
            return (Criteria) this;
        }

        public Criteria andPointBeginNotIn(List<Integer> values) {
            addCriterion("point_begin not in", values, "pointBegin");
            return (Criteria) this;
        }

        public Criteria andPointBeginBetween(Integer value1, Integer value2) {
            addCriterion("point_begin between", value1, value2, "pointBegin");
            return (Criteria) this;
        }

        public Criteria andPointBeginNotBetween(Integer value1, Integer value2) {
            addCriterion("point_begin not between", value1, value2, "pointBegin");
            return (Criteria) this;
        }

        public Criteria andPointEndIsNull() {
            addCriterion("point_end is null");
            return (Criteria) this;
        }

        public Criteria andPointEndIsNotNull() {
            addCriterion("point_end is not null");
            return (Criteria) this;
        }

        public Criteria andPointEndEqualTo(Integer value) {
            addCriterion("point_end =", value, "pointEnd");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andPointEndEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("point_end = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointEndNotEqualTo(Integer value) {
            addCriterion("point_end <>", value, "pointEnd");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andPointEndNotEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("point_end <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointEndGreaterThan(Integer value) {
            addCriterion("point_end >", value, "pointEnd");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andPointEndGreaterThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("point_end > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointEndGreaterThanOrEqualTo(Integer value) {
            addCriterion("point_end >=", value, "pointEnd");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andPointEndGreaterThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("point_end >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointEndLessThan(Integer value) {
            addCriterion("point_end <", value, "pointEnd");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andPointEndLessThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("point_end < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointEndLessThanOrEqualTo(Integer value) {
            addCriterion("point_end <=", value, "pointEnd");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andPointEndLessThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("point_end <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andPointEndIn(List<Integer> values) {
            addCriterion("point_end in", values, "pointEnd");
            return (Criteria) this;
        }

        public Criteria andPointEndNotIn(List<Integer> values) {
            addCriterion("point_end not in", values, "pointEnd");
            return (Criteria) this;
        }

        public Criteria andPointEndBetween(Integer value1, Integer value2) {
            addCriterion("point_end between", value1, value2, "pointEnd");
            return (Criteria) this;
        }

        public Criteria andPointEndNotBetween(Integer value1, Integer value2) {
            addCriterion("point_end not between", value1, value2, "pointEnd");
            return (Criteria) this;
        }

        public Criteria andMultipleIsNull() {
            addCriterion("multiple is null");
            return (Criteria) this;
        }

        public Criteria andMultipleIsNotNull() {
            addCriterion("multiple is not null");
            return (Criteria) this;
        }

        public Criteria andMultipleEqualTo(Integer value) {
            addCriterion("multiple =", value, "multiple");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andMultipleEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("multiple = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMultipleNotEqualTo(Integer value) {
            addCriterion("multiple <>", value, "multiple");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andMultipleNotEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("multiple <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMultipleGreaterThan(Integer value) {
            addCriterion("multiple >", value, "multiple");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andMultipleGreaterThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("multiple > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMultipleGreaterThanOrEqualTo(Integer value) {
            addCriterion("multiple >=", value, "multiple");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andMultipleGreaterThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("multiple >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMultipleLessThan(Integer value) {
            addCriterion("multiple <", value, "multiple");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andMultipleLessThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("multiple < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMultipleLessThanOrEqualTo(Integer value) {
            addCriterion("multiple <=", value, "multiple");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andMultipleLessThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("multiple <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andMultipleIn(List<Integer> values) {
            addCriterion("multiple in", values, "multiple");
            return (Criteria) this;
        }

        public Criteria andMultipleNotIn(List<Integer> values) {
            addCriterion("multiple not in", values, "multiple");
            return (Criteria) this;
        }

        public Criteria andMultipleBetween(Integer value1, Integer value2) {
            addCriterion("multiple between", value1, value2, "multiple");
            return (Criteria) this;
        }

        public Criteria andMultipleNotBetween(Integer value1, Integer value2) {
            addCriterion("multiple not between", value1, value2, "multiple");
            return (Criteria) this;
        }

        public Criteria andVipDayMultipleIsNull() {
            addCriterion("vip_day_multiple is null");
            return (Criteria) this;
        }

        public Criteria andVipDayMultipleIsNotNull() {
            addCriterion("vip_day_multiple is not null");
            return (Criteria) this;
        }

        public Criteria andVipDayMultipleEqualTo(Integer value) {
            addCriterion("vip_day_multiple =", value, "vipDayMultiple");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipDayMultipleEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_day_multiple = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipDayMultipleNotEqualTo(Integer value) {
            addCriterion("vip_day_multiple <>", value, "vipDayMultiple");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipDayMultipleNotEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_day_multiple <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipDayMultipleGreaterThan(Integer value) {
            addCriterion("vip_day_multiple >", value, "vipDayMultiple");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipDayMultipleGreaterThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_day_multiple > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipDayMultipleGreaterThanOrEqualTo(Integer value) {
            addCriterion("vip_day_multiple >=", value, "vipDayMultiple");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipDayMultipleGreaterThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_day_multiple >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipDayMultipleLessThan(Integer value) {
            addCriterion("vip_day_multiple <", value, "vipDayMultiple");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipDayMultipleLessThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_day_multiple < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipDayMultipleLessThanOrEqualTo(Integer value) {
            addCriterion("vip_day_multiple <=", value, "vipDayMultiple");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipDayMultipleLessThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_day_multiple <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipDayMultipleIn(List<Integer> values) {
            addCriterion("vip_day_multiple in", values, "vipDayMultiple");
            return (Criteria) this;
        }

        public Criteria andVipDayMultipleNotIn(List<Integer> values) {
            addCriterion("vip_day_multiple not in", values, "vipDayMultiple");
            return (Criteria) this;
        }

        public Criteria andVipDayMultipleBetween(Integer value1, Integer value2) {
            addCriterion("vip_day_multiple between", value1, value2, "vipDayMultiple");
            return (Criteria) this;
        }

        public Criteria andVipDayMultipleNotBetween(Integer value1, Integer value2) {
            addCriterion("vip_day_multiple not between", value1, value2, "vipDayMultiple");
            return (Criteria) this;
        }

        public Criteria andVipDayIsNull() {
            addCriterion("vip_day is null");
            return (Criteria) this;
        }

        public Criteria andVipDayIsNotNull() {
            addCriterion("vip_day is not null");
            return (Criteria) this;
        }

        public Criteria andVipDayEqualTo(String value) {
            addCriterion("vip_day =", value, "vipDay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipDayEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_day = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipDayNotEqualTo(String value) {
            addCriterion("vip_day <>", value, "vipDay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipDayNotEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_day <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipDayGreaterThan(String value) {
            addCriterion("vip_day >", value, "vipDay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipDayGreaterThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_day > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipDayGreaterThanOrEqualTo(String value) {
            addCriterion("vip_day >=", value, "vipDay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipDayGreaterThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_day >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipDayLessThan(String value) {
            addCriterion("vip_day <", value, "vipDay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipDayLessThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_day < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipDayLessThanOrEqualTo(String value) {
            addCriterion("vip_day <=", value, "vipDay");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipDayLessThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_day <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipDayLike(String value) {
            addCriterion("vip_day like", value, "vipDay");
            return (Criteria) this;
        }

        public Criteria andVipDayNotLike(String value) {
            addCriterion("vip_day not like", value, "vipDay");
            return (Criteria) this;
        }

        public Criteria andVipDayIn(List<String> values) {
            addCriterion("vip_day in", values, "vipDay");
            return (Criteria) this;
        }

        public Criteria andVipDayNotIn(List<String> values) {
            addCriterion("vip_day not in", values, "vipDay");
            return (Criteria) this;
        }

        public Criteria andVipDayBetween(String value1, String value2) {
            addCriterion("vip_day between", value1, value2, "vipDay");
            return (Criteria) this;
        }

        public Criteria andVipDayNotBetween(String value1, String value2) {
            addCriterion("vip_day not between", value1, value2, "vipDay");
            return (Criteria) this;
        }

        public Criteria andVipMonthCouponIsNull() {
            addCriterion("vip_month_coupon is null");
            return (Criteria) this;
        }

        public Criteria andVipMonthCouponIsNotNull() {
            addCriterion("vip_month_coupon is not null");
            return (Criteria) this;
        }

        public Criteria andVipMonthCouponEqualTo(String value) {
            addCriterion("vip_month_coupon =", value, "vipMonthCoupon");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipMonthCouponEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_month_coupon = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipMonthCouponNotEqualTo(String value) {
            addCriterion("vip_month_coupon <>", value, "vipMonthCoupon");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipMonthCouponNotEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_month_coupon <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipMonthCouponGreaterThan(String value) {
            addCriterion("vip_month_coupon >", value, "vipMonthCoupon");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipMonthCouponGreaterThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_month_coupon > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipMonthCouponGreaterThanOrEqualTo(String value) {
            addCriterion("vip_month_coupon >=", value, "vipMonthCoupon");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipMonthCouponGreaterThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_month_coupon >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipMonthCouponLessThan(String value) {
            addCriterion("vip_month_coupon <", value, "vipMonthCoupon");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipMonthCouponLessThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_month_coupon < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipMonthCouponLessThanOrEqualTo(String value) {
            addCriterion("vip_month_coupon <=", value, "vipMonthCoupon");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andVipMonthCouponLessThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("vip_month_coupon <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andVipMonthCouponLike(String value) {
            addCriterion("vip_month_coupon like", value, "vipMonthCoupon");
            return (Criteria) this;
        }

        public Criteria andVipMonthCouponNotLike(String value) {
            addCriterion("vip_month_coupon not like", value, "vipMonthCoupon");
            return (Criteria) this;
        }

        public Criteria andVipMonthCouponIn(List<String> values) {
            addCriterion("vip_month_coupon in", values, "vipMonthCoupon");
            return (Criteria) this;
        }

        public Criteria andVipMonthCouponNotIn(List<String> values) {
            addCriterion("vip_month_coupon not in", values, "vipMonthCoupon");
            return (Criteria) this;
        }

        public Criteria andVipMonthCouponBetween(String value1, String value2) {
            addCriterion("vip_month_coupon between", value1, value2, "vipMonthCoupon");
            return (Criteria) this;
        }

        public Criteria andVipMonthCouponNotBetween(String value1, String value2) {
            addCriterion("vip_month_coupon not between", value1, value2, "vipMonthCoupon");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNull() {
            addCriterion("add_time is null");
            return (Criteria) this;
        }

        public Criteria andAddTimeIsNotNull() {
            addCriterion("add_time is not null");
            return (Criteria) this;
        }

        public Criteria andAddTimeEqualTo(LocalDateTime value) {
            addCriterion("add_time =", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andAddTimeEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("add_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeNotEqualTo(LocalDateTime value) {
            addCriterion("add_time <>", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andAddTimeNotEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("add_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThan(LocalDateTime value) {
            addCriterion("add_time >", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("add_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time >=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andAddTimeGreaterThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("add_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThan(LocalDateTime value) {
            addCriterion("add_time <", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("add_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("add_time <=", value, "addTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andAddTimeLessThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("add_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAddTimeIn(List<LocalDateTime> values) {
            addCriterion("add_time in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotIn(List<LocalDateTime> values) {
            addCriterion("add_time not in", values, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andAddTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("add_time not between", value1, value2, "addTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(LocalDateTime value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("update_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(LocalDateTime value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeNotEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("update_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(LocalDateTime value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("update_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeGreaterThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("update_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(LocalDateTime value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("update_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andUpdateTimeLessThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("update_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<LocalDateTime> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<LocalDateTime> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNull() {
            addCriterion("deleted is null");
            return (Criteria) this;
        }

        public Criteria andDeletedIsNotNull() {
            addCriterion("deleted is not null");
            return (Criteria) this;
        }

        public Criteria andDeletedEqualTo(Boolean value) {
            addCriterion("deleted =", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andDeletedEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("deleted = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedNotEqualTo(Boolean value) {
            addCriterion("deleted <>", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andDeletedNotEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("deleted <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThan(Boolean value) {
            addCriterion("deleted >", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("deleted > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("deleted >=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andDeletedGreaterThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("deleted >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThan(Boolean value) {
            addCriterion("deleted <", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("deleted < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedLessThanOrEqualTo(Boolean value) {
            addCriterion("deleted <=", value, "deleted");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andDeletedLessThanOrEqualToColumn(LitemallUserCard.Column column) {
            addCriterion(new StringBuilder("deleted <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andDeletedIn(List<Boolean> values) {
            addCriterion("deleted in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotIn(List<Boolean> values) {
            addCriterion("deleted not in", values, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted between", value1, value2, "deleted");
            return (Criteria) this;
        }

        public Criteria andDeletedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("deleted not between", value1, value2, "deleted");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_user_card
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        private LitemallUserCardExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        protected Criteria(LitemallUserCardExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public LitemallUserCardExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        public Criteria andLogicalDeleted(boolean deleted) {
            return deleted ? andDeletedEqualTo(LitemallUserCard.Deleted.IS_DELETED.value()) : andDeletedNotEqualTo(LitemallUserCard.Deleted.IS_DELETED.value());
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table litemall_user_card
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table litemall_user_card
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table litemall_user_card
         *
         * @mbg.generated
         */
        void example(org.linlinjava.litemall.db.domain.LitemallUserCardExample example);
    }
}